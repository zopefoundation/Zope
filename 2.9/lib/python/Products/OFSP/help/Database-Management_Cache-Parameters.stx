Database Management - Cache Parameters: Zope database cache.
  
  Description

    This view allows you to view Zope database cache statistics and
    set cache parameters. The Zope database cache operates by keeping
    recently used objects in memory to improve performance. A large
    cache improves object access speed, but increases memory usage. A
    small cache reduces memory usage but may slow down object access
    speed.

  Information

    'Total number of objects in the database' -- Indicates the
    number of persistent objects in the Zope database. All of these
    objects are stored on disk, some of them are in memory too.

    'Total number of objects in memory from all caches' --
    Indicates the number of objects which are currently
    cached in memory. This is a good indication of the amount
    of memory used by Zope.

    'Target number of objects in memory per cache' -- Indicates
    the target number of objects to have in each cache at any
    given time. Zope will allow the number of objects to grow
    above this number while processing a request, but will always
    reduce the level to this number at the end of each request.

     This parameter is one factor affecting the amount of memory
     use by Zope. It controls the amount of memory used per cache,
     the other factor is the number of caches. In general,
     Zope uses one cache per worker thread (specified by the '-t'
     switch on the command line)

    'Total number of objects in each cache' -- This table displays
    one row for each object cache.

     'Number of objects in memory' --  This value should not stay
     larger than the configured target size for longer than one
     transaction.

      Note that the total number at the bottom of this column
      should be the same as the figure in the top half of the
      page. It may be slightly different because there is a small
      time interval between the calculation of the two totals.

     'Number of ghost objects' -- Ghost objects are those
     which only have a tiny memory footprint because their full
     state has not been loaded. You generally do not need to
     worry about the number of ghost objects because they are
     so small.
    
