Browser Id Manager - Add

  A browser id manager is an object which identifies visitors
  to your site, even if they don't log in.  Browser id managers
  are part of the Zope sessioning machinery.

  Form options available are:

    Id -- you cannot choose an 'id' for your browser id manager.
    It must always be "browser_id_manager".  Additionally, you cannot
    rename a browser id manager.  This is required in the current
    implementation so that session data managers can find browser
    id managers via Zope acquisition.  This may be changed in a
    later release.

    Title -- the browser id manager title.

    Browser Id Name -- the cookie name and/or form variable
    name used for this browser id manager instance.  This will be the
    name looked up in the 'cookies' or 'form' REQUEST namespaces
    when the browser id manager attempts to find a cookie or form
    variable with a browser id in it.

    Look for Browser Id In -- choose any of 'Forms and Query Strings',
    'URLs', or 'Cookies'.  The browser id name/value will be looked
    for within these places.

    Automatically Encode Zope-Generated URLs With A Browser Id -- if
    this is selected, URLs generated by Zope (such as URLs which come
    as a result of calling an object's 'absolute_url' method) will be
    encoded with a browser name and browser id as the first two
    elements of the URL path.

    Cookie path -- this is the 'path' element which should be sent
    in the session token cookie.  For more information, see the
    Netscape Cookie specification at
    http://home.netscape.com/newsref/std/cookie_spec.html.

    Cookie domain -- this is the "domain" element which should be
    sent in the browser id cookie. For more information, see
    the Netscape Cookie specification at
    http://home.netscape.com/newsref/std/cookie_spec.html.
    Leaving this form element blank results in no domain element
    in the cookie.  If you change the cookie domain here, the
    value you enter must have at least two dots (as per the cookie
    spec).

    Cookie lifetime in days -- browser id cookies sent to browsers
    will last this many days on a remote system before expiring if
    this value is set.  If this value is 0, cookies will persist
    on client browsers for only as long as the browser is open.

    Only send cookie over https -- if this flag is set, only send
    cookies to remote browsers if they're communicating with us
    over https.  The browser id cookie sent under this
    circumstance will also have the 'secure' flag set in it, which
    the remote browser should interpret as a request to refrain
    from sending the cookie back to the server over an insecure
    (non-https) connection.  NOTE: In the case you wish to share
    browser id cookies between https and non-https connections
    from the same browser, do not set this flag.

  After reviewing and changing these options, click the "Add"
  button to instantiate a browser id manager.

  You can manage a browser id manager by visiting it in the
  management interface.

Instantiating Multiple Browser Id Managers (Optional)

  If you've got special needs, you may want to instantiate more than
  one browser id manager.  In its default configuration, Zope will not
  allow you to create a browser id manager if one is installed in the
  root or in a place where the new browser id manager can acquire the
  original browser id manager via its containment path (for
  programmers: the session id manager's class' Zope __replaceable__
  property is set to UNIQUE).  This means, practically, that if you
  wish to have multiple browser id managers, you need to carefully
  delete the root browser id manager, then you need to place
  additional browser id managers in the most deeply-nested containers
  first, working your way out towards the root, finally replacing
  the root browser id manager if desired.

See Also

  - "Session API":SessionInterfaces.py

