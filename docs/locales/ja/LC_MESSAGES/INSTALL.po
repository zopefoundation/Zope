# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2009-2023, The Zope developer community
# This file is distributed under the same license as the Zope package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2023.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Zope 5.8\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-03-16 11:50+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: Takeaki Matsunaga\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.12.1\n"

#: ../../INSTALL.rst:2
msgid "Installing Zope"
msgstr ""

#: ../../INSTALL.rst:3
msgid ""
"This document describes installing Zope with `zc.buildout "
"<https://pypi.org/project/zc.buildout/>`_ (the **recommended** method) or"
" via ``pip``."
msgstr ""

#: ../../INSTALL.rst:12
msgid "Prerequisites"
msgstr ""

#: ../../INSTALL.rst:13
msgid ""
"In order to install Zope, you must have the following prerequisites "
"available:"
msgstr ""

#: ../../INSTALL.rst:16
msgid ""
"A supported version of Python, including the development support if "
"installed from system-level packages.  Supported versions include **3.7**"
" up to **3.11**."
msgstr ""

#: ../../INSTALL.rst:20
msgid ""
"Zope needs the Python ``zlib`` module to be importable.  If you are "
"building your own Python from source, please be sure that you have the "
"headers installed which correspond to your system's ``zlib``."
msgstr ""

#: ../../INSTALL.rst:24
msgid ""
"A C compiler capable of building extension modules for your Python (gcc "
"recommended)."
msgstr ""

#: ../../INSTALL.rst:27
msgid ""
"If you are using a Python interpreter shipping with your Linux "
"distribution, you need to install the matching Python development "
"package. As example, for Python 3 on Ubuntu 18.04, you have to type the "
"following:"
msgstr ""

#: ../../INSTALL.rst:37
msgid "Installing Zope with ``zc.buildout``"
msgstr ""

#: ../../INSTALL.rst:38
msgid ""
"`zc.buildout <https://pypi.org/project/zc.buildout/>`_ is a powerful tool"
" for creating repeatable builds of a given software configuration and "
"environment.  The Zope developers use ``zc.buildout`` to develop Zope "
"itself, as well as the underlying packages it uses. **This is the "
"recommended way of installing Zope**."
msgstr ""

#: ../../INSTALL.rst:44
msgid ""
"Installing the Zope software using ``zc.buildout`` involves the following"
" steps:"
msgstr ""

#: ../../INSTALL.rst:47
msgid ""
"Download and uncompress the Zope source distribution from `PyPI`__ if you"
" are using the built-in standard buildout configuration"
msgstr ""

#: ../../INSTALL.rst:52
msgid "Create a virtual environment"
msgstr ""

#: ../../INSTALL.rst:54
msgid "Install ``zc.buildout`` into the virtual environment"
msgstr ""

#: ../../INSTALL.rst:56
msgid "Run the buildout"
msgstr ""

#: ../../INSTALL.rst:58
msgid ""
"The following examples are from Linux and use Zope version 5.0. Just "
"replace that version number with your desired version."
msgstr ""

#: ../../INSTALL.rst:62
msgid "Built-in standard buildout configuration"
msgstr ""

#: ../../INSTALL.rst:75
msgid "Custom buildout configurations"
msgstr ""

#: ../../INSTALL.rst:76
msgid ""
"Instead of using the buildout configuration shipping with Zope itself, "
"you can also start with your own buildout configuration file."
msgstr ""

#: ../../INSTALL.rst:79
msgid ""
"The installation with a custom buildout configuration does not require "
"you to download Zope first:"
msgstr ""

#: ../../INSTALL.rst:92
msgid "Minimum configuration"
msgstr ""

#: ../../INSTALL.rst:93
msgid "Here's a minimum ``buildout.cfg`` configuration  example:"
msgstr ""

#: ../../INSTALL.rst:111
msgid "Using ``plone.recipe.zope2instance``"
msgstr ""

#: ../../INSTALL.rst:112
msgid ""
"To make your life a lot easier, you can use "
"``plone.recipe.zope2instance`` to automate a lot of the configuration "
"tasks from the following document, :doc:`operation`. "
"``plone.recipe.zope2instance`` has a myriad configuration options, please"
" see the `PyPI page "
"<https://pypi.org/project/plone.recipe.zope2instance/>`_."
msgstr ""

#: ../../INSTALL.rst:133
msgid ""
"One feature this kind of installation offers is the easy integration of "
"WSGI servers other than the built-in ``waitress``. You can specify a file"
" path to a WSGI configuration file to use when starting the Zope "
"instance. This works for WSGI servers that offer a PasteDeply-compatible "
"entry point, like ``gunicorn``. You will need to create the ``.ini`` file"
" yourself, and don't forget to include the WSGI server software egg in "
"the ``eggs`` specification:"
msgstr ""

#: ../../INSTALL.rst:152
msgid "Installing Zope with ``pip``"
msgstr ""

#: ../../INSTALL.rst:153
msgid "Installing the Zope software using ``pip`` involves the following steps:"
msgstr ""

#: ../../INSTALL.rst:156
msgid "Create a virtual environment (There is no need to activate it.)"
msgstr ""

#: ../../INSTALL.rst:158
msgid "Install Zope and its dependencies"
msgstr ""

#: ../../INSTALL.rst:160
msgid ""
"Example steps on Linux. Replace the version number \"5.0\" with the "
"latest version you find on https://zopefoundation.github.io/Zope/:"
msgstr ""

#: ../../INSTALL.rst:171
msgid ""
"You can also install Zope using a single requirements file. **Note that "
"this installation method might install packages that are not actually "
"needed** (i. e. more than are listed in the ``install_requires`` section "
"of ``setup.py``):"
msgstr ""

#: ../../INSTALL.rst:182
msgid "Building the documentation with ``Sphinx``"
msgstr ""

#: ../../INSTALL.rst:183
msgid ""
"If you have used ``zc.buildout`` for installation, you can build the HTML"
" documentation locally:"
msgstr ""

