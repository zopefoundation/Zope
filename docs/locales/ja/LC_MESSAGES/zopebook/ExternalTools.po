# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2009-2023, The Zope developer community
# This file is distributed under the same license as the Zope package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2023.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Zope 5.8\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-03-16 11:50+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.12.1\n"

#: ../../zopebook/ExternalTools.rst:2
msgid "Managing Zope Objects Using External Tools"
msgstr ""

#: ../../zopebook/includes/zope2_notice.rst:3
msgid "This document was written for Zope 2."
msgstr ""

#: ../../zopebook/ExternalTools.rst:6
msgid ""
"So far, you've been working with Zope objects in your web browser via the"
" Zope Management Interface. This chapter details how to use common non-"
"browser-based common to access and modify your Zope content."
msgstr ""

#: ../../zopebook/ExternalTools.rst:10
msgid ""
"Editing Zope content and code in the Zope Management Interface is "
"sometimes painful, especially when dealing with Python code, DTML, ZPT, "
"or even just HTML. The standard TEXTAREA text manipulation widget "
"provided by most browsers has an extremely limited feature set: no syntax"
" highlighting, no auto-indent, no key re-bindings, no WYSIWYG HTML "
"editing, and sometimes not even a search and replace function!"
msgstr ""

#: ../../zopebook/ExternalTools.rst:17
msgid ""
"In short, people want to use their own tools, or at least more feature-"
"rich tools, to work with Zope content."
msgstr ""

#: ../../zopebook/ExternalTools.rst:20
msgid ""
"It is possible under most operating systems to use the text \"cut and "
"paste\" facility (Ctrl-C, Ctrl-V under Windows, for example) to move text"
" between traditional text/HTML editors and your browser, copying data "
"back and forth between the Zope Management interface and your other "
"tools. This is, at best, cumbersome."
msgstr ""

#: ../../zopebook/ExternalTools.rst:26
msgid ""
"Luckily, Zope provides features that may allow you to interface Zope "
"directly with your existing tools. This chapter describes these features,"
" as well as the caveats for working with them."
msgstr ""

#: ../../zopebook/ExternalTools.rst:31
msgid "General Caveats"
msgstr ""

#: ../../zopebook/ExternalTools.rst:33
msgid ""
"Most external tools expect to deal with \"file-like\" content. Zope "
"objects are not really files in the strict sense of the word so there are"
" caveats to using external tools with Zope:"
msgstr ""

#: ../../zopebook/ExternalTools.rst:37
msgid ""
"Zope data is not stored in files in the filesystem. Thus, tools which "
"only work on files will not work with Zope without providing a \"bridge\""
" between the tool and Zope's file-like representation of its object "
"database. This \"bridge\" is typically accomplished using Zope's WebDAV "
"features."
msgstr ""

#: ../../zopebook/ExternalTools.rst:42
msgid ""
"Zope doesn't enforce any file extension rules when creating objects. Some"
" tools don't deal well with objects that don't have file extensions in "
"their names (notably Macromedia Dreamweaver). To avoid this issue, you "
"may name your objects with file extensions according to their type (e.g. "
"name all of your ZPT objects with an `.html` file extension), or use a "
"tool that understands extension-less \"files\". However, this approach "
"has numerous drawbacks."
msgstr ""

#: ../../zopebook/ExternalTools.rst:50
msgid ""
"External tools don't know about Zope object properties. If you modify an "
"object in an external tool, it may forget its property list."
msgstr ""

#: ../../zopebook/ExternalTools.rst:53
msgid ""
"Some external tools have semantics that can drive Zope crazy. For "
"instance, some like to create backup files with an id that is invalid for"
" Zope. Also, some tools will do a move-then-copy when saving, which "
"creates a new Zope object that is divorced from the history of the "
"original object."
msgstr ""

#: ../../zopebook/ExternalTools.rst:58
msgid ""
"There is nowhere to send meaningful error messages. These integration "
"features expect a finite set of errors defined by the protocol. Thus, the"
" actual problem reported by Zope, such as a syntax error in a page "
"template, cannot be displayed to the user."
msgstr ""

#: ../../zopebook/ExternalTools.rst:63
msgid ""
"The interactions between the tools and Zope can vary widely. On the "
"client side, different versions of software have different bugs and "
"features. Also, Microsoft has many different implementations of DAV in "
"Windows and Office, each with changes that make life difficult."
msgstr ""

#: ../../zopebook/ExternalTools.rst:68
msgid ""
"Finally, the semantics of Zope can interfere with the experience. The "
"same file on your hard drive, when copied into your local copy of Zope, "
"will have different results. In the case of the CMF, Zope will actually "
"alter what you saved (to add metadata)."
msgstr ""

#: ../../zopebook/ExternalTools.rst:73
msgid ""
"These caveats aside, you may use traditional file manipulation tools to "
"manage most kinds of Zope objects."
msgstr ""

#: ../../zopebook/ExternalTools.rst:77
msgid "WebDAV"
msgstr ""

#: ../../zopebook/ExternalTools.rst:79
msgid ""
"Most Zope \"file-like\" objects like DTML Methods, DTML Documents, Zope "
"Page Templates, Script (Python) objects and others can be edited with "
"WebDAV. Many HTML and text editors support this protocol for editing "
"documents on remote servers. This protocol has advantages and "
"disadvantages:"
msgstr ""

#: ../../zopebook/ExternalTools.rst:85
msgid ""
"`WebDAV <http://www.webdav.org/>`_ is a new Internet protocol based on "
"the Web's underlying protocol, HTTP. DAV stands for Distributed Authoring"
" and Versioning."
msgstr ""

#: ../../zopebook/ExternalTools.rst:90
msgid "Editing Zope Objects with WebDAV"
msgstr ""

#: ../../zopebook/ExternalTools.rst:92
msgid ""
"WebDAV is an extension to the HTTP protocol that provides features that "
"allow users to concurrently author and edit content on websites. WebDAV "
"offers features like locking, revision control, and the tagging of "
"objects with properties. Because WebDAV's goals of through the web "
"editing match some of the goals of Zope, Zope has supported the WebDAV "
"protocol for a fairly long time."
msgstr ""

#: ../../zopebook/ExternalTools.rst:98
msgid ""
"WebDAV is a newer Internet protocol compared to HTTP, so there are fewer "
"clients that support it. There is, however, growing momentum behind the "
"WebDAV movement and more clients are being developed rapidly."
msgstr ""

#: ../../zopebook/ExternalTools.rst:102
msgid ""
"The WebDAV protocol is evolving quickly, and new features are being added"
" all the time. You can use any WebDAV client to edit your Zope objects by"
" simply pointing the client at your object's URL and editing it. For most"
" clients, however, this will cause them to try to edit the *result* of "
"rendering the document, not the *source*>. For DTML or ZPT objects, this "
"can be a problem."
msgstr ""

#: ../../zopebook/ExternalTools.rst:108
msgid ""
"Until clients catch up to the latest WebDAV standard and understand the "
"difference between the source of a document and its result, Zope offers a"
" special HTTP server you can enable. To enable Zope's WebDAV source "
"server, enter the following in zope.conf::"
msgstr ""

#: ../../zopebook/ExternalTools.rst:119
msgid ""
"This server listens on a different port than your normal HTTP server and "
"returns different, special source content for WebDAV requests that come "
"in on that port."
msgstr ""

#: ../../zopebook/ExternalTools.rst:123
msgid ""
"For more information about starting Zope with a WebDAV source port turned"
" on, see the chapter entitled `Installing and Starting Zope "
"<InstallingZope.stx>`_. The \"standard\" WebDAV source port number "
"(according to IANA) is 9800."
msgstr ""

#: ../../zopebook/ExternalTools.rst:127
msgid ""
"Unfortunately, this entire discussion of source vs. rendered requests is "
"too esoteric for most users, who will try the regular port. Instead of "
"breaking, it will work in very unexpected ways, leading to confusion. "
"Until DAV clients support the standard's provision for discovering the "
"source URL, this distinction will have to be confronted."
msgstr ""

#: ../../zopebook/ExternalTools.rst:134
msgid "Note"
msgstr ""

#: ../../zopebook/ExternalTools.rst:136
msgid ""
"Zope has optional support for returning the source version of a resource "
"on the normal HTTP port. It does this by inspecting the user agent header"
" of the HTTP request. If the user agent matches a string you have "
"configured into your server settings, the source is returned."
msgstr ""

#: ../../zopebook/ExternalTools.rst:141
msgid ""
"This is quite useful, as there are few cases in which authoring tools "
"such as cadaver or Dreamweaver will want the rendered version. For more "
"information on this optional support, read the section \"Environment "
"Variables That Affect Zope At Runtime\" in `Installing and Starting Zope "
"<InstallingZope.stx>`_."
msgstr ""

#: ../../zopebook/ExternalTools.rst:147
msgid "Editing Zope objects with cadaver"
msgstr ""

#: ../../zopebook/ExternalTools.rst:149
msgid ""
"One program that supports WebDAV is a command-line tool named `cadaver`. "
"It is available for most UNIX systems (and Cygwin under Windows) from "
"`WebDAV.org <http://www.webdav.org/cadaver/>`_."
msgstr ""

#: ../../zopebook/ExternalTools.rst:153
msgid ""
"It is typically invoked from a command-line using the command `cadaver` "
"against Zope's WebDAV \"source port\"::"
msgstr ""

#: ../../zopebook/ExternalTools.rst:173
msgid ""
"Cadaver allows you to invoke an editor against files while inside the "
"command-line facility::"
msgstr ""

#: ../../zopebook/ExternalTools.rst:186
msgid ""
"In this case, the `index_html` object was pulled up for editing inside of"
" the `vi` text editor. You can specify your editor of choice on most "
"UNIX-like systems by changing the EDITOR environment variable."
msgstr ""

#: ../../zopebook/ExternalTools.rst:190
msgid ""
"You can also use cadaver to transfer files between your local directory "
"and remote Zope. For more advanced synchronization of data, the "
"`sitecopy` program can inspect your local and remote data and only "
"transfer the changes."
msgstr ""

#: ../../zopebook/ExternalTools.rst:196
msgid "Editing Zope objects with KDE applications"
msgstr ""

#: ../../zopebook/ExternalTools.rst:198
msgid ""
"KDE applications are WebDAV aware. Therefore, we can actually edit Zope "
"objects from any of the KDE applications, such as konqueror, quanta, "
"kate, et cetera."
msgstr ""

#: ../../zopebook/ExternalTools.rst:201
msgid "Using konqueror:"
msgstr ""

#: ../../zopebook/ExternalTools.rst:203
msgid "enter::"
msgstr ""

#: ../../zopebook/ExternalTools.rst:207
msgid "enter the username and password when prompted."
msgstr ""

#: ../../zopebook/ExternalTools.rst:209
msgid "start editing when konqueror presents the Zope workspace."
msgstr ""

#: ../../zopebook/ExternalTools.rst:213
msgid "Viewing the Zope object hierarchy with konquerorWebDAV"
msgstr ""

#: ../../zopebook/ExternalTools.rst:216
msgid "Using Kate:"
msgstr ""

#: ../../zopebook/ExternalTools.rst:218
msgid "Open Kate"
msgstr ""

#: ../../zopebook/ExternalTools.rst:220
msgid "Click File > Open"
msgstr ""

#: ../../zopebook/ExternalTools.rst:222
msgid "Enter::"
msgstr ""

#: ../../zopebook/ExternalTools.rst:226
msgid "in \"Open File dialog\" \"Location\""
msgstr ""

#: ../../zopebook/ExternalTools.rst:228
msgid "Browse for your file or start editing."
msgstr ""

#: ../../zopebook/ExternalTools.rst:232
msgid "Kate Open File dialog box WebDAV"
msgstr ""

#: ../../zopebook/ExternalTools.rst:236
msgid "Other Integration Facilities"
msgstr ""

#: ../../zopebook/ExternalTools.rst:238
msgid ""
"This chapter focused on WebDAV. This is the most popular and mature "
"approach for integration. However, other choices are available."
msgstr ""

#: ../../zopebook/ExternalTools.rst:241
msgid ""
"For instance, Zope has long supported the use of HTTP PUT, originally "
"implemented by Netscape as \"Netscape Publishing\". This allows Netscape "
"Composer, Mozilla Composer, and Amaya to edit and create new pages, along"
" with associated elements such as images and stylesheets."
msgstr ""

